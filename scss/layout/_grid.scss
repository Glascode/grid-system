.grid {
  display: grid;
  grid-template-columns: repeat($columns, 1fr);
  grid-auto-rows: 1fr;
  grid-gap: .5rem; // default value
}

@each $breakpoint in map-keys($breakpoints) {
  @include media-breakpoint($breakpoint, $breakpoints) {
    $breakpoint-prefix: breakpoint-infix($breakpoint, $breakpoints);

    @for $number from 1 through $columns {
      .grid.columns#{$breakpoint-prefix}-#{$number} {
        grid-template-columns: repeat($number, 1fr);
      }
    }

    @each $size, $length in $spacers {
      .gap#{$breakpoint-prefix}-#{$size} {
        grid-gap: $length;
      }
    }

    // Column span
    @for $size from 1 through $columns {
      .c#{$breakpoint-prefix}-#{$size} {
        grid-column-end: span $size;
      }
    }

    // Column precise span
    @for $start from 1 through $columns {
      @for $end from $start + 1 through $columns {
        .c#{$breakpoint-prefix}-#{$start}-#{$end} {
          grid-column: #{$start} / #{$end};
        }
      }

      .c#{$breakpoint-prefix}-#{$start}-e {
        grid-column: #{$start} / -1;
      }
    }

    // Full row
    .row#{$breakpoint-prefix} {
      grid-column: 1 / -1;
    }

    //// Column start
    //@for $size from 1 through $columns {
    //  .cs#{$breakpoint-prefix}-#{$size} {
    //    grid-column-start: $size;
    //  }
    //}
    //
    //// Column end
    //@for $size from 1 through $columns {
    //  .ce#{$breakpoint-prefix}-#{$size} {
    //    grid-column-end: $size;
    //  }
    //}

    .c-e#{$breakpoint-prefix} {
      grid-column-end: -1;
    }

    // Row span
    @for $size from 1 through $columns {
      .r#{$breakpoint-prefix}-#{$size} {
        grid-row-end: span $size;
      }
    }

    @for $size from 1 through $columns {
      .r-start#{$breakpoint-prefix}-#{$size} {
        grid-row-start: $size;
      }
    }

    // Order
    @for $order from 1 through $orders {
      .o#{$breakpoint-prefix}-#{$order} {
        order: $order;
      }
    }

    .o#{$breakpoint-prefix}-first {
      order: -999;
    }

    .o#{$breakpoint-prefix}-last {
      order: 999;
    }
  }
}
